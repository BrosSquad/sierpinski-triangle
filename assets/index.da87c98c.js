const h=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function t(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerpolicy&&(o.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?o.credentials="include":n.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(n){if(n.ep)return;n.ep=!0;const o=t(n);fetch(n.href,o)}};h();class d{constructor(e,t,r){this.a=e,this.b=t,this.c=r}draw(e){if(this.a===null||this.b===null||this.c===null)throw new Error("A, B and C vectors must not be null");for(const t of[this.a,this.b,this.c])e.strokeStyle="rgba(0, 0, 0, 1)",e.lineWidth=10,e.beginPath(),e.moveTo(t.x,t.y),e.lineTo(t.x+t.size/2,t.y-t.size*Math.sin(Math.PI/3)),e.lineTo(t.x+t.size,t.y),e.lineTo(t.x,t.y),e.closePath(),e.stroke()}get A(){return this.a}get B(){return this.b}get C(){return this.c}set A(e){this.a=e}set B(e){this.b=e}set C(e){this.c=e}}let s=new d(null,null,null);const c=(i,e,t)=>{const r=e.size/2;if(s.A={x:e.x,y:e.y,size:r},s.B={x:e.x+r,y:e.y,size:r},s.C={x:e.x+r/2,y:e.y-Math.sin(Math.PI/3)*r,size:r},t===0){s.draw(i);return}for(const n of[s.A,s.B,s.C])c(i,n,t-1)};document.addEventListener("DOMContentLoaded",()=>{g()});const a=2,f=3e3,y=3e3;function g(){const i=document.querySelector("#sierpinski-triangle"),e=document.querySelector("input[type=number]");if(i===null){console.error("Canvas is not found");return}i.width=f,i.height=y;const t=i.height,r=i.getContext("2d"),n={x:0,y:t,size:t};if(r===null){console.error("Cannot obtain Canvas 2D Context -> Check you BROWSER Version");return}let o=a|0;e!==null&&(e.value=a.toString(),e.addEventListener("input",({target:l})=>{o=parseInt(l.value,10)|0,u(r,n,o)})),u(r,n,o)}function m(i){i.clearRect(0,0,i.canvas.width,i.canvas.height)}function u(i,e,t){m(i),c(i,e,t)}
