const f=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function t(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerpolicy&&(o.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?o.credentials="include":n.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(n){if(n.ep)return;n.ep=!0;const o=t(n);fetch(n.href,o)}};f();class h{constructor(e,t,i){this.a=e,this.b=t,this.c=i}draw(e){if(this.a===null||this.b===null||this.c===null)throw new Error("A, B and C vectors must not be null");for(const t of[this.a,this.b,this.c])e.strokeStyle="rgba(0, 0, 0, 1)",e.lineWidth=10,e.beginPath(),e.moveTo(t.x,t.y),e.lineTo(t.x+t.size/2,t.y-t.size*Math.sin(Math.PI/3)),e.lineTo(t.x+t.size,t.y),e.lineTo(t.x,t.y),e.closePath(),e.stroke()}get A(){return this.a}get B(){return this.b}get C(){return this.c}set A(e){this.a=e}set B(e){this.b=e}set C(e){this.c=e}}let l=new h(null,null,null);const c=(r,e,t)=>{const i=e.size/2;if(l.A={x:e.x,y:e.y,size:i},l.B={x:e.x+i,y:e.y,size:i},l.C={x:e.x+i/2,y:e.y-Math.sin(Math.PI/3)*i,size:i},t===0){l.draw(r);return}for(const n of[l.A,l.B,l.C])c(r,n,t-1)};document.addEventListener("DOMContentLoaded",()=>{y()});const a=2,g=3e3,m=3e3;function y(){const r=document.querySelector("#sierpinski-triangle"),e=document.querySelector("input[type=number]"),t=document.querySelector("#trianges");if(r===null){console.error("Canvas is not found");return}if(t===null){console.error("Span for `Number of triangles` is not found");return}r.width=g,r.height=m;const i=r.height,n=r.getContext("2d"),o={x:0,y:i,size:i};if(n===null){console.error("Cannot obtain Canvas 2D Context -> Check you BROWSER Version");return}let s=a|0;e!==null&&(e.value=a.toString(),e.addEventListener("input",({target:d})=>{s=parseInt(d.value,10)|0,u(n,o,t,s)})),u(n,o,t,s)}function p(r,e){r.innerText=(Math.pow(3,e)|0).toString()}function b(r){r.clearRect(0,0,r.canvas.width,r.canvas.height)}function u(r,e,t,i){b(r),p(t,i),c(r,e,i)}
